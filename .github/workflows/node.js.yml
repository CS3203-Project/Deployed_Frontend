# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    # Setup pnpm (this repository uses pnpm - see pnpm-lock.yaml)
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 10.18.0

    - name: Verify pnpm version
      run: pnpm -v

    # Cache pnpm store to speed up installs on subsequent runs
    - name: Cache pnpm store
      uses: actions/cache@v4
      with:
        path: ${{ runner.os == 'Windows' && 'C:\\Users\\runneradmin\\.pnpm-store' || '~/.pnpm-store' }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build
      run: pnpm run --if-present build

    - name: Deploy to server
      run: |
        echo "Deploying to production server..."
        # Add your deployment commands here
        # Make sure the server has compatible Node.js version

